strict digraph "" {
	node [label="\N"];
	0	[label="0: start"];
	13	[label="0: stop"];
	0 -> 13;
	1	[label="1: enter: quantile(sortedElements, phi)"];
	3	[label="3: n = len(sortedElements)"];
	1 -> 3;
	4	[label="4: index = (phi * (n - 1))"];
	3 -> 4;
	2	[label="1: exit: quantile(sortedElements, phi)"];
	8	[label="10: return 0"];
	8 -> 2;
	12	[label="18: return result"];
	12 -> 2;
	5	[label="5: lhs = int(index)"];
	4 -> 5;
	6	[label="7: delta = (index - lhs)"];
	5 -> 6;
	7	[label="9: if: (n == 0)"];
	6 -> 7;
	7 -> 8;
	9	[label="12: if: (lhs == (n - 1))"];
	7 -> 9;
	10	[label="13: result = sortedElements[lhs]"];
	9 -> 10;
	11	[label="16: result = (((1 - delta) * sortedElements[lhs]) + (delta * sortedElements[(lhs + 1)]))"];
	9 -> 11;
	10 -> 12;
	11 -> 12;
}
