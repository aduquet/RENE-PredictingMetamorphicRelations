strict digraph "" {
	node [label="\N"];
	0	[label="0: start"];
	29	[label="0: stop"];
	0 -> 29;
	1	[label="4: enter: evaluateInternal(x, y, z)"];
	3	[label="6: nearest = 0"];
	1 -> 3;
	4	[label="7: n = len(x)"];
	3 -> 4;
	2	[label="4: exit: evaluateInternal(x, y, z)"];
	28	[label="40: return value"];
	28 -> 2;
	5	[label="8: c = []"];
	4 -> 5;
	6	[label="9: d = []"];
	5 -> 6;
	7	[label="11: min_dist = math.inf"];
	6 -> 7;
	8	[label="13: for: (True if range(0, n) else False)"];
	7 -> 8;
	9	[label="13: i = range(0, n).shift()"];
	8 -> 9;
	16	[label="23: value = y[nearest]"];
	8 -> 16;
	10	[label="14: c[i] = y[i]"];
	9 -> 10;
	17	[label="24: for: (True if range(0, n) else False)"];
	16 -> 17;
	15	[label="21: min_dist = dist"];
	15 -> 8;
	13	[label="19: if: (dist < min_dist)"];
	13 -> 8;
	14	[label="20: nearest = i"];
	13 -> 14;
	14 -> 15;
	11	[label="15: d[i] = y[i]"];
	10 -> 11;
	12	[label="17: dist = abs((z - x[i]))"];
	11 -> 12;
	12 -> 13;
	17 -> 28;
	18	[label="24: i = range(0, n).shift()"];
	17 -> 18;
	19	[label="25: for: (True if range(0, (n - i)) else False)"];
	18 -> 19;
	27	[label="34: if: (nearest < (0.5 * ((n - i) + 1)))"];
	27 -> 17;
	19 -> 27;
	20	[label="25: j = range(0, (n - i)).shift()"];
	19 -> 20;
	21	[label="26: tc = (x[j] - z)"];
	20 -> 21;
	26	[label="32: d[j] = (td * w)"];
	26 -> 19;
	22	[label="27: td = (x[(i + j)] - z)"];
	21 -> 22;
	23	[label="28: divider = (x[j] - x[(i + j)])"];
	22 -> 23;
	24	[label="29: w = ((c[(j + 1)] - d[j]) / divider)"];
	23 -> 24;
	25	[label="31: c[j] = (tc * w)"];
	24 -> 25;
	25 -> 26;
}
