digraph "CFG for '_Z9partitionPdiii' function" {
	label="CFG for '_Z9partitionPdiii' function";

	Node0x233834d2420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9abbff70",label="{%4:\l  %5 = alloca double*, align 8\l  %6 = alloca i32, align 4\l  %7 = alloca i32, align 4\l  %8 = alloca i32, align 4\l  %9 = alloca double, align 8\l  %10 = alloca i32, align 4\l  %11 = alloca i32, align 4\l  %12 = alloca double, align 8\l  store double* %0, double** %5, align 8\l  store i32 %1, i32* %6, align 4\l  store i32 %2, i32* %7, align 4\l  store i32 %3, i32* %8, align 4\l  %13 = load double*, double** %5, align 8\l  %14 = load i32, i32* %8, align 4\l  %15 = sext i32 %14 to i64\l  %16 = getelementptr inbounds double, double* %13, i64 %15\l  %17 = load double, double* %16, align 8\l  store double %17, double* %9, align 8\l  %18 = load double*, double** %5, align 8\l  %19 = load i32, i32* %6, align 4\l  %20 = sext i32 %19 to i64\l  %21 = getelementptr inbounds double, double* %18, i64 %20\l  %22 = load double, double* %21, align 8\l  %23 = load double*, double** %5, align 8\l  %24 = load i32, i32* %8, align 4\l  %25 = sext i32 %24 to i64\l  %26 = getelementptr inbounds double, double* %23, i64 %25\l  store double %22, double* %26, align 8\l  %27 = load i32, i32* %6, align 4\l  %28 = add nsw i32 %27, 1\l  store i32 %28, i32* %10, align 4\l  %29 = load i32, i32* %7, align 4\l  %30 = sub nsw i32 %29, 1\l  store i32 %30, i32* %11, align 4\l  br label %31\l}"];
	Node0x233834d2420 -> Node0x233834d2600;
	Node0x233834d2600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%31:\l31:                                               \l  %32 = load i32, i32* %10, align 4\l  %33 = load i32, i32* %11, align 4\l  %34 = icmp slt i32 %32, %33\l  br i1 %34, label %35, label %98\l|{<s0>T|<s1>F}}"];
	Node0x233834d2600:s0 -> Node0x233834d11b0;
	Node0x233834d2600:s1 -> Node0x233834d1a70;
	Node0x233834d11b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%35:\l35:                                               \l  br label %36\l}"];
	Node0x233834d11b0 -> Node0x233834d1b60;
	Node0x233834d1b60 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%36:\l36:                                               \l  %37 = load i32, i32* %10, align 4\l  %38 = load i32, i32* %11, align 4\l  %39 = icmp slt i32 %37, %38\l  br i1 %39, label %40, label %48\l|{<s0>T|<s1>F}}"];
	Node0x233834d1b60:s0 -> Node0x233834d1430;
	Node0x233834d1b60:s1 -> Node0x233834d10c0;
	Node0x233834d1430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%40:\l40:                                               \l  %41 = load double*, double** %5, align 8\l  %42 = load i32, i32* %11, align 4\l  %43 = sext i32 %42 to i64\l  %44 = getelementptr inbounds double, double* %41, i64 %43\l  %45 = load double, double* %44, align 8\l  %46 = load double, double* %9, align 8\l  %47 = fcmp ogt double %45, %46\l  br label %48\l}"];
	Node0x233834d1430 -> Node0x233834d10c0;
	Node0x233834d10c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%48:\l48:                                               \l  %49 = phi i1 [ false, %36 ], [ %47, %40 ]\l  br i1 %49, label %50, label %53\l|{<s0>T|<s1>F}}"];
	Node0x233834d10c0:s0 -> Node0x233834d1890;
	Node0x233834d10c0:s1 -> Node0x233834d1520;
	Node0x233834d1890 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%50:\l50:                                               \l  %51 = load i32, i32* %11, align 4\l  %52 = add nsw i32 %51, -1\l  store i32 %52, i32* %11, align 4\l  br label %36, !llvm.loop !3\l}"];
	Node0x233834d1890 -> Node0x233834d1b60;
	Node0x233834d1520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%53:\l53:                                               \l  br label %54\l}"];
	Node0x233834d1520 -> Node0x233834d1980;
	Node0x233834d1980 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%54:\l54:                                               \l  %55 = load i32, i32* %10, align 4\l  %56 = load i32, i32* %11, align 4\l  %57 = icmp slt i32 %55, %56\l  br i1 %57, label %58, label %66\l|{<s0>T|<s1>F}}"];
	Node0x233834d1980:s0 -> Node0x233834d19d0;
	Node0x233834d1980:s1 -> Node0x233834d0f80;
	Node0x233834d19d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%58:\l58:                                               \l  %59 = load double*, double** %5, align 8\l  %60 = load i32, i32* %10, align 4\l  %61 = sext i32 %60 to i64\l  %62 = getelementptr inbounds double, double* %59, i64 %61\l  %63 = load double, double* %62, align 8\l  %64 = load double, double* %9, align 8\l  %65 = fcmp olt double %63, %64\l  br label %66\l}"];
	Node0x233834d19d0 -> Node0x233834d0f80;
	Node0x233834d0f80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%66:\l66:                                               \l  %67 = phi i1 [ false, %54 ], [ %65, %58 ]\l  br i1 %67, label %68, label %71\l|{<s0>T|<s1>F}}"];
	Node0x233834d0f80:s0 -> Node0x233834d1c50;
	Node0x233834d0f80:s1 -> Node0x233834d0bc0;
	Node0x233834d1c50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%68:\l68:                                               \l  %69 = load i32, i32* %10, align 4\l  %70 = add nsw i32 %69, 1\l  store i32 %70, i32* %10, align 4\l  br label %54, !llvm.loop !5\l}"];
	Node0x233834d1c50 -> Node0x233834d1980;
	Node0x233834d0bc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%71:\l71:                                               \l  %72 = load i32, i32* %10, align 4\l  %73 = load i32, i32* %11, align 4\l  %74 = icmp slt i32 %72, %73\l  br i1 %74, label %75, label %97\l|{<s0>T|<s1>F}}"];
	Node0x233834d0bc0:s0 -> Node0x233834d14d0;
	Node0x233834d0bc0:s1 -> Node0x233834d15c0;
	Node0x233834d14d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%75:\l75:                                               \l  %76 = load double*, double** %5, align 8\l  %77 = load i32, i32* %10, align 4\l  %78 = sext i32 %77 to i64\l  %79 = getelementptr inbounds double, double* %76, i64 %78\l  %80 = load double, double* %79, align 8\l  store double %80, double* %12, align 8\l  %81 = load double*, double** %5, align 8\l  %82 = load i32, i32* %11, align 4\l  %83 = sext i32 %82 to i64\l  %84 = getelementptr inbounds double, double* %81, i64 %83\l  %85 = load double, double* %84, align 8\l  %86 = load double*, double** %5, align 8\l  %87 = load i32, i32* %10, align 4\l  %88 = add nsw i32 %87, 1\l  store i32 %88, i32* %10, align 4\l  %89 = sext i32 %87 to i64\l  %90 = getelementptr inbounds double, double* %86, i64 %89\l  store double %85, double* %90, align 8\l  %91 = load double, double* %12, align 8\l  %92 = load double*, double** %5, align 8\l  %93 = load i32, i32* %11, align 4\l  %94 = add nsw i32 %93, -1\l  store i32 %94, i32* %11, align 4\l  %95 = sext i32 %93 to i64\l  %96 = getelementptr inbounds double, double* %92, i64 %95\l  store double %91, double* %96, align 8\l  br label %97\l}"];
	Node0x233834d14d0 -> Node0x233834d15c0;
	Node0x233834d15c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%97:\l97:                                               \l  br label %31, !llvm.loop !6\l}"];
	Node0x233834d15c0 -> Node0x233834d2600;
	Node0x233834d1a70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9abbff70",label="{%98:\l98:                                               \l  %99 = load i32, i32* %10, align 4\l  %100 = load i32, i32* %7, align 4\l  %101 = icmp sge i32 %99, %100\l  br i1 %101, label %110, label %102\l|{<s0>T|<s1>F}}"];
	Node0x233834d1a70:s0 -> Node0x233834d18e0;
	Node0x233834d1a70:s1 -> Node0x233834d1110;
	Node0x233834d1110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#81a4fb70",label="{%102:\l102:                                              \l  %103 = load double*, double** %5, align 8\l  %104 = load i32, i32* %10, align 4\l  %105 = sext i32 %104 to i64\l  %106 = getelementptr inbounds double, double* %103, i64 %105\l  %107 = load double, double* %106, align 8\l  %108 = load double, double* %9, align 8\l  %109 = fcmp ogt double %107, %108\l  br i1 %109, label %110, label %113\l|{<s0>T|<s1>F}}"];
	Node0x233834d1110:s0 -> Node0x233834d18e0;
	Node0x233834d1110:s1 -> Node0x233834d1610;
	Node0x233834d18e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%110:\l110:                                              \l  %111 = load i32, i32* %10, align 4\l  %112 = add nsw i32 %111, -1\l  store i32 %112, i32* %10, align 4\l  br label %113\l}"];
	Node0x233834d18e0 -> Node0x233834d1610;
	Node0x233834d1610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9abbff70",label="{%113:\l113:                                              \l  %114 = load double*, double** %5, align 8\l  %115 = load i32, i32* %10, align 4\l  %116 = sext i32 %115 to i64\l  %117 = getelementptr inbounds double, double* %114, i64 %116\l  %118 = load double, double* %117, align 8\l  %119 = load double*, double** %5, align 8\l  %120 = load i32, i32* %6, align 4\l  %121 = sext i32 %120 to i64\l  %122 = getelementptr inbounds double, double* %119, i64 %121\l  store double %118, double* %122, align 8\l  %123 = load double, double* %9, align 8\l  %124 = load double*, double** %5, align 8\l  %125 = load i32, i32* %10, align 4\l  %126 = sext i32 %125 to i64\l  %127 = getelementptr inbounds double, double* %124, i64 %126\l  store double %123, double* %127, align 8\l  %128 = load i32, i32* %10, align 4\l  ret i32 %128\l}"];
}
