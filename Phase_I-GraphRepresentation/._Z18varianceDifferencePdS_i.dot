digraph "CFG for '_Z18varianceDifferencePdS_i' function" {
	label="CFG for '_Z18varianceDifferencePdS_i' function";

	Node0x20efa960f30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%3:\l  %4 = alloca double*, align 8\l  %5 = alloca double*, align 8\l  %6 = alloca i32, align 4\l  %7 = alloca double, align 8\l  %8 = alloca double, align 8\l  %9 = alloca double, align 8\l  %10 = alloca double, align 8\l  %11 = alloca i32, align 4\l  %12 = alloca double, align 8\l  %13 = alloca i32, align 4\l  store double* %0, double** %4, align 8\l  store double* %1, double** %5, align 8\l  store i32 %2, i32* %6, align 4\l  store double 0.000000e+00, double* %7, align 8\l  store double 0.000000e+00, double* %8, align 8\l  store double 0.000000e+00, double* %9, align 8\l  store double 0.000000e+00, double* %10, align 8\l  store i32 0, i32* %11, align 4\l  br label %14\l}"];
	Node0x20efa960f30 -> Node0x20efa960a80;
	Node0x20efa960a80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%14:\l14:                                               \l  %15 = load i32, i32* %11, align 4\l  %16 = load i32, i32* %6, align 4\l  %17 = icmp slt i32 %15, %16\l  br i1 %17, label %18, label %35\l|{<s0>T|<s1>F}}"];
	Node0x20efa960a80:s0 -> Node0x20efa961250;
	Node0x20efa960a80:s1 -> Node0x20efa960b70;
	Node0x20efa961250 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%18:\l18:                                               \l  %19 = load double*, double** %4, align 8\l  %20 = load i32, i32* %11, align 4\l  %21 = sext i32 %20 to i64\l  %22 = getelementptr inbounds double, double* %19, i64 %21\l  %23 = load double, double* %22, align 8\l  %24 = load double*, double** %5, align 8\l  %25 = load i32, i32* %11, align 4\l  %26 = sext i32 %25 to i64\l  %27 = getelementptr inbounds double, double* %24, i64 %26\l  %28 = load double, double* %27, align 8\l  %29 = fsub double %23, %28\l  %30 = load double, double* %10, align 8\l  %31 = fadd double %30, %29\l  store double %31, double* %10, align 8\l  br label %32\l}"];
	Node0x20efa961250 -> Node0x20efa960c10;
	Node0x20efa960c10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%32:\l32:                                               \l  %33 = load i32, i32* %11, align 4\l  %34 = add nsw i32 %33, 1\l  store i32 %34, i32* %11, align 4\l  br label %14, !llvm.loop !3\l}"];
	Node0x20efa960c10 -> Node0x20efa960a80;
	Node0x20efa960b70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%35:\l35:                                               \l  %36 = load double, double* %10, align 8\l  %37 = load i32, i32* %6, align 4\l  %38 = sitofp i32 %37 to double\l  %39 = fdiv double %36, %38\l  store double %39, double* %12, align 8\l  store i32 0, i32* %13, align 4\l  br label %40\l}"];
	Node0x20efa960b70 -> Node0x20efa960cb0;
	Node0x20efa960cb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%40:\l40:                                               \l  %41 = load i32, i32* %13, align 4\l  %42 = load i32, i32* %6, align 4\l  %43 = icmp slt i32 %41, %42\l  br i1 %43, label %44, label %73\l|{<s0>T|<s1>F}}"];
	Node0x20efa960cb0:s0 -> Node0x20efa961700;
	Node0x20efa960cb0:s1 -> Node0x20efa960bc0;
	Node0x20efa961700 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%44:\l44:                                               \l  %45 = load double*, double** %4, align 8\l  %46 = load i32, i32* %13, align 4\l  %47 = sext i32 %46 to i64\l  %48 = getelementptr inbounds double, double* %45, i64 %47\l  %49 = load double, double* %48, align 8\l  %50 = load double*, double** %5, align 8\l  %51 = load i32, i32* %13, align 4\l  %52 = sext i32 %51 to i64\l  %53 = getelementptr inbounds double, double* %50, i64 %52\l  %54 = load double, double* %53, align 8\l  %55 = fsub double %49, %54\l  store double %55, double* %9, align 8\l  %56 = load double, double* %9, align 8\l  %57 = load double, double* %12, align 8\l  %58 = fsub double %56, %57\l  %59 = load double, double* %9, align 8\l  %60 = load double, double* %12, align 8\l  %61 = fsub double %59, %60\l  %62 = fmul double %58, %61\l  %63 = load double, double* %7, align 8\l  %64 = fadd double %63, %62\l  store double %64, double* %7, align 8\l  %65 = load double, double* %9, align 8\l  %66 = load double, double* %12, align 8\l  %67 = fsub double %65, %66\l  %68 = load double, double* %8, align 8\l  %69 = fadd double %68, %67\l  store double %69, double* %8, align 8\l  br label %70\l}"];
	Node0x20efa961700 -> Node0x20efa961480;
	Node0x20efa961480 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%70:\l70:                                               \l  %71 = load i32, i32* %13, align 4\l  %72 = add nsw i32 %71, 1\l  store i32 %72, i32* %13, align 4\l  br label %40, !llvm.loop !5\l}"];
	Node0x20efa961480 -> Node0x20efa960cb0;
	Node0x20efa960bc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%73:\l73:                                               \l  %74 = load double, double* %7, align 8\l  %75 = load double, double* %8, align 8\l  %76 = load double, double* %8, align 8\l  %77 = fmul double %75, %76\l  %78 = load i32, i32* %6, align 4\l  %79 = sitofp i32 %78 to double\l  %80 = fdiv double %77, %79\l  %81 = fsub double %74, %80\l  %82 = load i32, i32* %6, align 4\l  %83 = sub nsw i32 %82, 1\l  %84 = sitofp i32 %83 to double\l  %85 = fdiv double %81, %84\l  ret double %85\l}"];
}
